/*
Settings API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// IntraService5SharedEnumsFieldType3A22 the model 'IntraService5SharedEnumsFieldType3A22'
type IntraService5SharedEnumsFieldType3A22 int32

// List of IntraService5.Shared.Enums.FieldType_3A22
const (
	_1 IntraService5SharedEnumsFieldType3A22 = 1
	_2 IntraService5SharedEnumsFieldType3A22 = 2
	_3 IntraService5SharedEnumsFieldType3A22 = 3
	_4 IntraService5SharedEnumsFieldType3A22 = 4
	_5 IntraService5SharedEnumsFieldType3A22 = 5
	_6 IntraService5SharedEnumsFieldType3A22 = 6
	_7 IntraService5SharedEnumsFieldType3A22 = 7
	_8 IntraService5SharedEnumsFieldType3A22 = 8
	_9 IntraService5SharedEnumsFieldType3A22 = 9
	_10 IntraService5SharedEnumsFieldType3A22 = 10
	_11 IntraService5SharedEnumsFieldType3A22 = 11
	_12 IntraService5SharedEnumsFieldType3A22 = 12
	_13 IntraService5SharedEnumsFieldType3A22 = 13
)

// All allowed values of IntraService5SharedEnumsFieldType3A22 enum
var AllowedIntraService5SharedEnumsFieldType3A22EnumValues = []IntraService5SharedEnumsFieldType3A22{
	1,
	2,
	3,
	4,
	5,
	6,
	7,
	8,
	9,
	10,
	11,
	12,
	13,
}

func (v *IntraService5SharedEnumsFieldType3A22) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := IntraService5SharedEnumsFieldType3A22(value)
	for _, existing := range AllowedIntraService5SharedEnumsFieldType3A22EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid IntraService5SharedEnumsFieldType3A22", value)
}

// NewIntraService5SharedEnumsFieldType3A22FromValue returns a pointer to a valid IntraService5SharedEnumsFieldType3A22
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIntraService5SharedEnumsFieldType3A22FromValue(v int32) (*IntraService5SharedEnumsFieldType3A22, error) {
	ev := IntraService5SharedEnumsFieldType3A22(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IntraService5SharedEnumsFieldType3A22: valid values are %v", v, AllowedIntraService5SharedEnumsFieldType3A22EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IntraService5SharedEnumsFieldType3A22) IsValid() bool {
	for _, existing := range AllowedIntraService5SharedEnumsFieldType3A22EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to IntraService5.Shared.Enums.FieldType_3A22 value
func (v IntraService5SharedEnumsFieldType3A22) Ptr() *IntraService5SharedEnumsFieldType3A22 {
	return &v
}

type NullableIntraService5SharedEnumsFieldType3A22 struct {
	value *IntraService5SharedEnumsFieldType3A22
	isSet bool
}

func (v NullableIntraService5SharedEnumsFieldType3A22) Get() *IntraService5SharedEnumsFieldType3A22 {
	return v.value
}

func (v *NullableIntraService5SharedEnumsFieldType3A22) Set(val *IntraService5SharedEnumsFieldType3A22) {
	v.value = val
	v.isSet = true
}

func (v NullableIntraService5SharedEnumsFieldType3A22) IsSet() bool {
	return v.isSet
}

func (v *NullableIntraService5SharedEnumsFieldType3A22) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntraService5SharedEnumsFieldType3A22(val *IntraService5SharedEnumsFieldType3A22) *NullableIntraService5SharedEnumsFieldType3A22 {
	return &NullableIntraService5SharedEnumsFieldType3A22{value: val, isSet: true}
}

func (v NullableIntraService5SharedEnumsFieldType3A22) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntraService5SharedEnumsFieldType3A22) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

